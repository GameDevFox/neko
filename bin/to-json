#!/usr/bin/env node
// -*- mode: js2 -*-

var _ = require("lodash");
var concat = require("concat-stream");

var opt = require("node-getopt").create([
    ["a", "array", "array mode"],
    ["h", "help", "display this help"],
    ["o", "object=KEY", "object mode"],
    ["p", "pretty", "output pretty json"],
    ["s", "split", "split args"],
    ["t", "trim=NUM+", "trim NUM limes from the top (positive) or bottom (negative)"],
])
        .bindHelp()
        .parseSystem();

var options = opt.options;

// Option validation
if(options.array && options.object)
    throw new Error("Incompatible options: --array and --object. Please select only one.");

// Start
var readStdin = new Promise((resolve, reject) => {
    process.stdin.pipe(concat(input => {
        resolve(input.toString());
    }));
});

var chain = readStdin.then(input => input.split(/\n/))
    .then(lines => _.filter(lines, line => line.trim().length != 0));

// Options
_.each(options.trim, trim => {
    trim = parseInt(trim);
    if(trim > 0)
        chain = chain.then(lines => lines.slice(trim));
    else
        chain = chain.then(lines => lines.slice(0, lines.length + trim));
});

if(options.split)
    chain = chain.then(lines => _.map(lines, line  => line.split(/\s+/)))

if(options.array) {
    chain = chain.then(lines => _.map(lines, line => [line]));
}

if(options.object) {
    chain = chain.then(lines => _.map(lines, line => {
        var key = options.object;
        var result = {};

        result[key] = line;
        return result;
    }));
}

chain.then(result => console.log(JSON.stringify(result, null, options.pretty ? 2 : undefined)));
